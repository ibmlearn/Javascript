debugger;
loop(document);
function loop(node){
	var nodes = node.childNodes;
	nodes.forEach( function(eachNode, index, list){
		console.log(getPathTo(eachNode));
    	console.log(getPageXY(eachNode));
		console.log(getElementCoordinates(eachNode));
		if(eachNode.childNodes.length>0) {
			loop(eachNode);        
		}
	});
};
function getPathTo(element) {
	if(element.attributes){
			Array.prototype.slice.call(element.attributes).forEach(function(attrNode) {
				if(attrNode.nodeName=='id')
					 return '[@id="'+element.id+'"]';
            });
        }
    if (element===document.body)
        return element.tagName;

    var ix= 0;
	var siblings;
	if(element.parentNode!=null){
        siblings= element.parentNode.childNodes;
        for (var i= 0; i<siblings.length; i++) {
            var sibling= siblings[i];
            if (sibling===element)
                return getPathTo(element.parentNode)+'/'+element.tagName+'['+(ix+1)+']';
            if (sibling.nodeType===1 && sibling.tagName===element.tagName)
                ix++;
        }
    }
}

function getPageXY(element) {
    var x= 0, y= 0;
    while (element) {
        x+= element.offsetLeft;
        y+= element.offsetTop;
        element= element.offsetParent;
    }
    return [x, y];
}

function getElementCoordinates(element) {
	if (element.getBoundingClientRect) {
        var rect = element.getBoundingClientRect();
        var sx = -(window.scrollX ? window.scrollX : window.pageXOffset);
        var sy = -(window.scrollY ? window.scrollY : window.pageYOffset);

        return {
            x: rect.left - sx,
            y: rect.top - sy
        }
    }
}
